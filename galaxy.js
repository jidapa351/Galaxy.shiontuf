// ========== Helper ==========
function getZodiacSign(dateString) {
  const date = new Date(dateString);
  const day = date.getDate();
  const month = date.getMonth() + 1;

  if ((month == 1 && day >= 20) || (month == 2 && day <= 18)) return "Aquarius ‚ôíÔ∏è";
  if ((month == 2 && day >= 19) || (month == 3 && day <= 20)) return "Pisces ‚ôìÔ∏è";
  if ((month == 3 && day >= 21) || (month == 4 && day <= 19)) return "Aries ‚ôàÔ∏è";
  if ((month == 4 && day >= 20) || (month == 5 && day <= 20)) return "Taurus ‚ôâÔ∏è";
  if ((month == 5 && day >= 21) || (month == 6 && day <= 20)) return "Gemini ‚ôäÔ∏è";
  if ((month == 6 && day >= 21) || (month == 7 && day <= 22)) return "Cancer ‚ôãÔ∏è";
  if ((month == 7 && day >= 23) || (month == 8 && day <= 22)) return "Leo ‚ôåÔ∏è";
  if ((month == 8 && day >= 23) || (month == 9 && day <= 22)) return "Virgo ‚ôçÔ∏è";
  if ((month == 9 && day >= 23) || (month == 10 && day <= 22)) return "Libra ‚ôéÔ∏è";
  if ((month == 10 && day >= 23) || (month == 11 && day <= 21)) return "Scorpio ‚ôèÔ∏è";
  if ((month == 11 && day >= 22) || (month == 12 && day <= 21)) return "Sagittarius ‚ôêÔ∏è";
  if ((month == 12 && day >= 22) || (month == 1 && day <= 19)) return "Capricorn ‚ôëÔ∏è";
  return "Unknown";
}

const zodiacDescriptions = {
  "Aquarius ‚ôíÔ∏è": "‡∏â‡∏•‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏Ñ‡∏¥‡∏î‡∏ô‡∏≠‡∏Å‡∏Å‡∏£‡∏≠‡∏ö ‡∏°‡∏≠‡∏á‡πÇ‡∏•‡∏Å‡πÉ‡∏ô‡πÅ‡∏á‡πà‡∏î‡∏µ ‡∏ä‡∏≠‡∏ö‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô",
  "Pisces ‚ôìÔ∏è": "‡∏°‡∏µ‡∏à‡∏¥‡∏ô‡∏ï‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏á ‡∏≠‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß ‡∏ä‡∏≠‡∏ö‡∏®‡∏¥‡∏•‡∏õ‡∏∞‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö",
  "Aries ‚ôàÔ∏è": "‡∏Å‡∏•‡πâ‡∏≤‡∏´‡∏≤‡∏ç ‡∏£‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡∏î‡∏µ",
  "Taurus ‚ôâÔ∏è": "‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡∏£‡∏±‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏™‡∏ö‡∏≤‡∏¢",
  "Gemini ‚ôäÔ∏è": "‡∏â‡∏•‡∏≤‡∏î‡∏õ‡∏£‡∏≤‡∏î‡πÄ‡∏õ‡∏£‡∏∑‡πà‡∏≠‡∏á ‡∏ä‡πà‡∏≤‡∏á‡∏û‡∏π‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡πÄ‡∏Å‡πà‡∏á",
  "Cancer ‚ôãÔ∏è": "‡∏≠‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß ‡∏£‡∏±‡∏Å‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡πÅ‡∏•‡∏∞‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å",
  "Leo ‚ôåÔ∏è": "‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∏‡∏î‡∏™‡∏ô‡πÉ‡∏à ‡∏£‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡∏Å",
  "Virgo ‚ôçÔ∏è": "‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏ö ‡∏ä‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô",
  "Libra ‚ôéÔ∏è": "‡∏£‡∏±‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏î‡∏∏‡∏• ‡∏°‡∏µ‡πÄ‡∏™‡∏ô‡πà‡∏´‡πå ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∏‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°",
  "Scorpio ‚ôèÔ∏è": "‡πÄ‡∏Ç‡πâ‡∏°‡πÅ‡∏Ç‡πá‡∏á ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö ‡πÅ‡∏•‡∏∞‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô",
  "Sagittarius ‚ôêÔ∏è": "‡∏£‡∏±‡∏Å‡∏≠‡∏¥‡∏™‡∏£‡∏∞ ‡∏ä‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢ ‡πÅ‡∏•‡∏∞‡∏°‡∏≠‡∏á‡πÇ‡∏•‡∏Å‡πÉ‡∏ô‡πÅ‡∏á‡πà‡∏î‡∏µ",
  "Capricorn ‚ôëÔ∏è": "‡∏Ç‡∏¢‡∏±‡∏ô ‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏™‡∏π‡∏á"
};

const zodiacImages = {
  "Aquarius ‚ôíÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/4/4a/Aquarius.svg",
  "Pisces ‚ôìÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/0/03/Pisces.svg",
  "Aries ‚ôàÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/5/5a/Aries.svg",
  "Taurus ‚ôâÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/3/3a/Taurus.svg",
  "Gemini ‚ôäÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/9/99/Gemini.svg",
  "Cancer ‚ôãÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/e/e0/Cancer.svg",
  "Leo ‚ôåÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/6/6f/Leo.svg",
  "Virgo ‚ôçÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/6/6e/Virgo.svg",
  "Libra ‚ôéÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/f/f7/Libra.svg",
  "Scorpio ‚ôèÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/2/2e/Scorpio.svg",
  "Sagittarius ‚ôêÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/8/88/Sagittarius.svg",
  "Capricorn ‚ôëÔ∏è": "https://upload.wikimedia.org/wikipedia/commons/7/76/Capricorn.svg"
};


// === UI Elements ===
const resultEl = document.getElementById("result");
const actionEl = document.getElementById("actionButtons");
const dateInput = document.getElementById("dateInput");

// === Loading Spinner (smooth) ===
function showLoader() {
  resultEl.innerHTML = `
    <div class="loader mx-auto my-6" style="
      border: 4px solid rgba(255,255,255,0.2);
      border-top: 4px solid #a78bfa;
      border-radius: 50%;
      width: 40px; height: 40px;
      animation: spin 1s linear infinite;
    "></div>
    <p class="text-indigo-300 mt-2 font-medium">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏±‡∏Å‡∏£‡∏£‡∏≤‡∏®‡∏µ...</p>
  `;
  actionEl.classList.add("hidden");
}
function hideLoader() {
  resultEl.querySelector('.loader')?.remove();
}

// === Fade-in Animation for result block ===
function fadeIn(element, duration = 600) {
  element.style.opacity = 0;
  element.style.transition = `opacity ${duration}ms ease-in-out`;
  requestAnimationFrame(() => {
    element.style.opacity = 1;
  });
}

// === Main function ===
async function generateArt() {
  const date = dateInput.value.trim();

  if (!date) {
    showAlert("üö´ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡∏ô!");
    return;
  }

  const selectedDate = new Date(date);
  const today = new Date();
  if (selectedDate > today) {
    showAlert("‚è≥ ‡∏¢‡∏±‡∏á‡∏î‡∏π‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö! ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡πÅ‡∏ó‡∏ô‡∏ô‡∏∞ üöÄ");
    return;
  }

  showLoader();

  // ‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡πÉ‡∏ä‡πâ timeout ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏≠ API ‡∏à‡∏£‡∏¥‡∏á
  await new Promise(r => setTimeout(r, 1500));

  const zodiac = getZodiacSign(date);
  const description = zodiacDescriptions[zodiac] || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏®‡∏µ‡∏ô‡∏µ‡πâ";

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á content ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
  resultEl.innerHTML = `
    <div id="captureArea" class="bg-white bg-opacity-90 rounded-3xl p-6 shadow-lg text-black relative overflow-hidden">
      <img
        src="${zodiacImages[zodiac]}"
        alt="${zodiac}"
        class="mx-auto w-28 h-28 mb-4 drop-shadow-lg"
      />
      <h2 class="text-3xl font-extrabold mb-2 tracking-wide">${zodiac}</h2>
      <p class="text-gray-800 text-lg">${description}</p>
      <p class="mt-4 text-sm text-gray-600 font-mono">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: <strong>${date}</strong></p>
      <div id="shootingStar" style="position:absolute; top:-30px; left:-30px; width:60px; height:60px; pointer-events:none;"></div>
    </div>
  `;
  fadeIn(resultEl.firstElementChild);

  actionEl.classList.remove("hidden");

  // ‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡∏î‡∏≤‡∏ß‡∏û‡∏∏‡πà‡∏á‡πÄ‡∏•‡πá‡∏Å‡πÜ
  animateShootingStar();
}

// === ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û ===
async function downloadImage() {
  const captureArea = document.getElementById("captureArea");
  if (!captureArea) return;

  const canvas = await html2canvas(captureArea);
  canvas.toBlob(blob => {
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = "zodiac-result.png";
    a.click();
    URL.revokeObjectURL(url);
  });
}

// === ‡πÅ‡∏ä‡∏£‡πå‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (copy URL ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå) ===
function shareResult() {
  const date = dateInput.value.trim();
  if (!date) {
    showAlert("‚ùó ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏ä‡∏£‡πå‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö");
    return;
  }

  const shareUrl = `${window.location.origin}${window.location.pathname}?date=${encodeURIComponent(date)}`;

  if (navigator.share) {
    navigator.share({
      title: "‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô",
      text: `‡∏°‡∏≤‡∏î‡∏π‡∏ú‡∏•‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏±‡∏Å‡∏£‡∏£‡∏≤‡∏®‡∏µ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô! ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${date}`,
      url: shareUrl
    }).catch(() => {
      fallbackCopyUrl(shareUrl);
    });
  } else {
    fallbackCopyUrl(shareUrl);
  }
}

function fallbackCopyUrl(url) {
  navigator.clipboard.writeText(url).then(() => {
    showAlert("‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! ‡πÅ‡∏ä‡∏£‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏î‡∏π‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢");
  }).catch(() => {
    showAlert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏î‡πâ ‡∏•‡∏≠‡∏á‡πÅ‡∏ä‡∏£‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏°‡∏∑‡∏≠‡πÅ‡∏ó‡∏ô");
  });
}

// === Alert ‡πÅ‡∏ö‡∏ö‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏° (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ alert ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤) ===
function showAlert(msg) {
  if (document.querySelector(".custom-alert")) return; // ‡∏Å‡∏±‡∏ô‡∏ã‡πâ‡∏≠‡∏ô alert

  const alertBox = document.createElement("div");
  alertBox.className = "custom-alert fixed top-6 left-1/2 -translate-x-1/2 bg-indigo-600 text-white py-3 px-6 rounded-xl shadow-lg font-semibold z-50 animate-slideDown";
  alertBox.textContent = msg;
  document.body.appendChild(alertBox);

  setTimeout(() => {
    alertBox.classList.add("animate-slideUp");
  }, 2000);

  setTimeout(() => {
    alertBox.remove();
  }, 2700);
}

// === Animation keyframes for alert ===
const style = document.createElement('style');
style.innerHTML = `
@keyframes slideDown {
  0% {opacity: 0; transform: translate(-50%, -40px);}
  100% {opacity: 1; transform: translate(-50%, 0);}
}
@keyframes slideUp {
  0% {opacity: 1; transform: translate(-50%, 0);}
  100% {opacity: 0; transform: translate(-50%, -40px);}
}
.custom-alert {
  animation: slideDown 0.3s forwards;
}
.custom-alert.animate-slideUp {
  animation: slideUp 0.3s forwards;
}

/* loader spin */
@keyframes spin {
  0% {transform: rotate(0deg);}
  100% {transform: rotate(360deg);}
}
`;
document.head.appendChild(style);

// === ‡∏î‡∏≤‡∏ß‡∏û‡∏∏‡πà‡∏á‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô ===
function animateShootingStar() {
  const starContainer = document.getElementById("shootingStar");
  if (!starContainer) return;

  starContainer.innerHTML = "";
  const star = document.createElement("div");
  star.style.width = "6px";
  star.style.height = "6px";
  star.style.background = "linear-gradient(45deg, white, rgba(255,255,255,0))";
  star.style.position = "absolute";
  star.style.borderRadius = "50%";
  star.style.filter = "drop-shadow(0 0 6px white)";
  star.style.top = "0";
  star.style.left = "0";
  star.style.opacity = "1";
  star.style.transform = "translate(0, 0)";

  starContainer.appendChild(star);

  star.animate([
    { transform: 'translate(0, 0)', opacity: 1 },
    { transform: 'translate(80px, 40px)', opacity: 0 }
  ], {
    duration: 1000,
    easing: 'ease-out'
  });

  setTimeout(() => {
    star.remove();
  }, 1100);
}

// === ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡πà‡∏≤‡∏ô query param ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ñ‡πâ‡∏≤‡∏°‡∏µ ===
window.addEventListener("DOMContentLoaded", () => {
  const params = new URLSearchParams(window.location.search);
  const dateParam = params.get("date");

  if (dateParam) {
    dateInput.value = dateParam;
    generateArt();
  }
});
